name: Docker Image Build

on:
  push:
    branches:
      - main
  workflow_dispatch:
  repository_dispatch:

env:
  IMAGE_REGISTRY: docker.pkg.github.com
  IMAGE_REPOSITORY: valuabletouch/thingsboard
  IMAGE_VERSION: build-${{ github.run_number }}
  THINGSBOARD_GIT_REPO: https://github.com/valuabletouch/thingsboard.git
  THINGSBOARD_GIT_BRANCH: master
  THINGSBOARD_VERSION: "3.2.1"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check current path
      run: pwd

    - name: Print Docker information
      run: docker info

    - name: Check disk spaces before clean up
      run: sudo df -h

    - name: List 100 largest packages
      run: dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100

    - name: Make some clean up to have additional disk space
      run: |
        set -x; \
        docker system prune --all --force; \
        sudo rm -rf /usr/local/share/boost; \
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"; \
        sudo apt-get remove --auto-remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell msbuild; \
        sudo apt-get remove --auto-remove -y '^ghc-8.*'; \
        sudo apt-get remove --auto-remove -y '^llvm-.*'; \
        sudo apt-get remove --auto-remove -y '^g++-.*'; \
        sudo apt-get remove --auto-remove -y '^gccgo-.*'; \
        sudo apt-get remove --auto-remove -y '^libclang-.*'; \
        sudo apt-get remove --auto-remove -y '^gfortran-.*'; \
        sudo apt-get remove --auto-remove -y '^cpp-.*'; \
        sudo apt-get remove --auto-remove -y '^dotnet-.*'; \
        sudo apt-get remove --auto-remove -y '^aspnetcore-.*'; \
        sudo apt-get remove --auto-remove -y '^netstandard-.*'; \
        sudo apt-get remove --auto-remove -y '^mono-.*'; \
        sudo apt-get remove --auto-remove -y '^libmono.*'; \
        sudo apt-get remove --auto-remove -y '^php.*'; \
        sudo apt-get remove --auto-remove -y 'jdk.*'; \
        sudo apt-get remove --auto-remove -y 'jre.*'; \
        sudo apt-get remove --auto-remove -y '^ruby.*'; \
        sudo apt-get remove --auto-remove -y '^python.*'; \
        sudo apt-get remove --auto-remove -y '^nginx.*'; \
        sudo apt-get remove --auto-remove -y '^mysql.*'; \
        sudo apt-get remove --auto-remove -y '^mongodb.*'; \
        sudo apt-get remove --auto-remove -y '^postgresql.*'; \
        sudo apt-get autoremove -y; \
        sudo apt-get clean; \
        sudo rm -rf /usr/share/dotnet/; \
        true

    - name: Check disk spaces after clean up
      run: sudo df -h

    - name: Checkout files
      uses: actions/checkout@v2

    - name: Build 'ThingsBoard Base' Docker Image
      run: |
        docker build \
            --file Dockerfile.base \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/base:latest \
            .

    - name: Build 'ThingsBoard Build Intermadiate' Docker Image
      run: |
        docker build \
            --file Dockerfile.build \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/build:$IMAGE_VERSION \
            --build-arg THINGSBOARD_GIT_REPO=$THINGSBOARD_GIT_REPO \
            --build-arg THINGSBOARD_GIT_BRANCH=$THINGSBOARD_GIT_BRANCH \
            .

    - name: Build 'ThingsBoard Setup Intermadiate' Docker Image
      run: |
        docker build \
            --file Dockerfile.setup \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/setup:$IMAGE_VERSION \
            --build-arg IMAGE_REPOSITORY=$IMAGE_REGISTRY/$IMAGE_REPOSITORY \
            --build-arg IMAGE_VERSION=$IMAGE_VERSION \
            .

    - name: Build 'ThingsBoard Node Microservice' Docker Image
      run: |
        docker build \
            --file Dockerfile.node \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/node:latest \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/node:$IMAGE_VERSION \
            --build-arg IMAGE_REPOSITORY=$IMAGE_REGISTRY/$IMAGE_REPOSITORY \
            --build-arg IMAGE_VERSION=$IMAGE_VERSION \
            --build-arg THINGSBOARD_VERSION=$THINGSBOARD_VERSION \
            .

    - name: Build 'ThingsBoard COAP Transport Microservice' Docker Image
      run: |
        docker build \
            --file Dockerfile.coap-transport \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/coap-transport:latest \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/coap-transport:$IMAGE_VERSION \
            --build-arg IMAGE_REPOSITORY=$IMAGE_REGISTRY/$IMAGE_REPOSITORY \
            --build-arg IMAGE_VERSION=$IMAGE_VERSION \
            --build-arg THINGSBOARD_VERSION=$THINGSBOARD_VERSION \
            .

    - name: Build 'ThingsBoard HTTP Transport Microservice' Docker Image
      run: |
        docker build \
            --file Dockerfile.http-transport \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/http-transport:latest \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/http-transport:$IMAGE_VERSION \
            --build-arg IMAGE_REPOSITORY=$IMAGE_REGISTRY/$IMAGE_REPOSITORY \
            --build-arg IMAGE_VERSION=$IMAGE_VERSION \
            --build-arg THINGSBOARD_VERSION=$THINGSBOARD_VERSION \
            .

    - name: Build 'ThingsBoard MQTT Transport Microservice' Docker Image
      run: |
        docker build \
            --file Dockerfile.mqtt-transport \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/mqtt-transport:latest \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/mqtt-transport:$IMAGE_VERSION \
            --build-arg IMAGE_REPOSITORY=$IMAGE_REGISTRY/$IMAGE_REPOSITORY \
            --build-arg IMAGE_VERSION=$IMAGE_VERSION \
            --build-arg THINGSBOARD_VERSION=$THINGSBOARD_VERSION \
            .

    - name: Build 'ThingsBoard JavaScript Executor Microservice' Docker Image
      run: |
        docker build \
            --file Dockerfile.js-executor \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/js-executor:latest \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/js-executor:$IMAGE_VERSION \
            --build-arg IMAGE_REPOSITORY=$IMAGE_REGISTRY/$IMAGE_REPOSITORY \
            --build-arg IMAGE_VERSION=$IMAGE_VERSION \
            --build-arg THINGSBOARD_VERSION=$THINGSBOARD_VERSION \
            .

    - name: Build 'ThingsBoard Web UI Microservice' Docker Image
      run: |
        docker build \
            --file Dockerfile.web-ui \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/web-ui:latest \
            --tag $IMAGE_REGISTRY/$IMAGE_REPOSITORY/web-ui:$IMAGE_VERSION \
            --build-arg IMAGE_REPOSITORY=$IMAGE_REGISTRY/$IMAGE_REPOSITORY \
            --build-arg IMAGE_VERSION=$IMAGE_VERSION \
            --build-arg THINGSBOARD_VERSION=$THINGSBOARD_VERSION \
            .

    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.PUSH_PACKAGE_PAT }}

    - name: Push 'ThingsBoard Base' Image to Docker Registry (latest)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/base:latest

    - name: Push 'ThingsBoard Node Microservice' Image to Docker Registry (latest)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/node:latest

    - name: Push 'ThingsBoard Node Microservice' Image to Docker Registry (build)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/node:$IMAGE_VERSION

    - name: Push 'ThingsBoard COAP Transport Microservice' Image to Docker Registry (latest)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/coap-transport:latest

    - name: Push 'ThingsBoard COAP Transport Microservice' Image to Docker Registry (build)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/coap-transport:$IMAGE_VERSION

    - name: Push 'ThingsBoard HTTP Transport Microservice' Image to Docker Registry (latest)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/http-transport:latest

    - name: Push 'ThingsBoard HTTP Transport Microservice' Image to Docker Registry (build)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/http-transport:$IMAGE_VERSION

    - name: Push 'ThingsBoard MQTT Transport Microservice' Image to Docker Registry (latest)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/mqtt-transport:latest

    - name: Push 'ThingsBoard MQTT Transport Microservice' Image to Docker Registry (build)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/mqtt-transport:$IMAGE_VERSION

    - name: Push 'ThingsBoard JavaScript Executor Microservice' Image to Docker Registry (latest)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/js-executor:latest

    - name: Push 'ThingsBoard JavaScript Executor Microservice' Image to Docker Registry (build)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/js-executor:$IMAGE_VERSION

    - name: Push 'ThingsBoard Web UI Microservice' Image to Docker Registry (latest)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/web-ui:latest

    - name: Push 'ThingsBoard Web UI Microservice' Image to Docker Registry (build)
      run: docker push $IMAGE_REGISTRY/$IMAGE_REPOSITORY/web-ui:$IMAGE_VERSION

    - name: Check disk spaces after build
      if: ${{ always() }}
      run: sudo df -h
